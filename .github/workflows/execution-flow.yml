name: Website Deployment
on:
  push:
    branches:
      - master
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4.1.7
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4.0.2
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4.1.7
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4.0.2
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4.3.5
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4.1.7
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4.0.2
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4.3.5
        with:
          name: dist-files
          path: dist
  deploy:
    permissions:
        id-token: write
        contents: read
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4.1.7
      - name: Get build artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Deploy EC2
        uses: bitovi/github-actions-deploy-github-runner-to-ec2@v0.1.1
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID_DEVELOPMENT }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEVELOPMENT }}
          aws_default_region: us-east-1
          additional_tags: '{\"key\":\"value\",\"key2\":\"value2\"}'

          aws_vpc_id: vpc-00000000000000000
          aws_vpc_subnet_id: subnet-00000000000000

          ec2_instance_type: t2.medium
          ec2_instance_public_ip: false
          ec2_additional_tags: '{\"key3\":\"value3\",\"key4\":\"value4\"}'

          repo_url: https://github.com/runner-rep
          repo_access_token: ${{ secrets.RUNNER_TOKEN }}
  report:
    needs: [lint,deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output Information
        run: |
          echo "Something Ain't right"
          echo "{{ toJSON(github) }}""